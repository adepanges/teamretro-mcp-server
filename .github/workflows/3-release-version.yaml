name: 3. Release Version

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  release-version:
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install conventional-changelog
        run: npm install -g conventional-changelog-cli

      - id: semver
        uses: gandarez/semver-action@v2.0.0
        with:
          branching_model: "git-flow"
          prerelease_id: "alpha"
          main_branch_name: "main"
          develop_branch_name: "develop"
          debug: true

      - name: Branching
        id: branch
        run: |
          git fetch --tags

          git checkout -b version/${{ steps.semver.outputs.semver_tag }}
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            # When triggered by PR, use the PR's base branch
            echo "target=${{ github.base_ref }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # When manually dispatched, use the branch where workflow was triggered
            echo "target=${{ github.ref }}" >> $GITHUB_OUTPUT
          else
            # Fallback to main branch
            echo "target=main" >> $GITHUB_OUTPUT
          fi

      - name: Update package.json version
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "github-actions[bot]"
          npm version ${{ steps.semver.outputs.semver_tag }} --no-git-tag-version
          git add package.json
          git commit -m "chore: update version to ${{ steps.semver.outputs.semver_tag }}"

      - name: Generate Version Changelog
        run: |
          mkdir -p changelog
          conventional-changelog -p angular --skip-unstable --output-unreleased -o changelog/${{ steps.semver.outputs.semver_tag }}.md
          echo "- [${{ steps.semver.outputs.semver_tag }}](./changelog/${{ steps.semver.outputs.semver_tag }}.md)" >> CHANGELOG.md
          git add changelog/ CHANGELOG.md
          git commit -m "docs: add changelog for ${{ steps.semver.outputs.semver_tag }}"
          git push origin version/${{ steps.semver.outputs.semver_tag }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: version/${{ steps.semver.outputs.semver_tag }}
          base: "${{ steps.branch.outputs.target }}"
          title: "Version Update: ${{ steps.semver.outputs.semver_tag }}"
          body: |
            ### Version Update
            - New version: ${{ steps.semver.outputs.semver_tag }}
            - Changelog generated
            - Package.json updated
          draft: false
          delete-branch: true

      - name: Cleanup Old Version Branches
        run: |
          # Get all version branches, sorted by commit date (newest first)
          branches=$(git branch -r --list 'origin/version/v*' | \
            xargs -I{} git log -1 --format="%ct {}" {} | \
            sort -nr | \
            cut -d' ' -f2-)
          
          # Group branches by major version
          declare -A branch_groups
          for branch in $branches; do
            version=$(echo $branch | grep -oP 'v\d+')
            branch_groups[$version]+="$branch "
          done
          
          # Process each major version group
          keep=5
          for version in "${!branch_groups[@]}"; do
            count=0
            echo "Processing version group: $version"
            for branch in ${branch_groups[$version]}; do
              count=$((count+1))
              if [ $count -gt $keep ]; then
                echo "Deleting old branch: $branch"
                git push origin --delete ${branch#origin/}
              fi
            done
          done

  create-release-tag:
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'version/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get package version
        id: version
        run: |
          echo "version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Validate changelog
        id: validate-changelog
        run: |
          if [ ! -f "changelog/${{ steps.version.outputs.version }}.md" ]; then
            echo "Changelog file for ${{ steps.version.outputs.version }} not found"
            exit 1
          fi
          echo "Changelog validation successful"

      - name: Create tag
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "github-actions[bot]"
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}
