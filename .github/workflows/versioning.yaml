name: Semantic Versioning

on:
  workflow_dispatch:
  pull_request:
    types: [labeled, closed]
    branches:
      - develop

jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  release-version:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: semver
        uses: gandarez/semver-action@v2.0.0
        with:
          branching_model: "git-flow"
          prerelease_id: "alpha"
          main_branch_name: "main"
          develop_branch_name: "develop"
          debug: true

      - name: Semantic Version Output
        run: |
          echo "Semver tag: ${{ steps.semver.outputs.semver_tag }}"
          echo "Previous tag: ${{ steps.semver.outputs.previous_tag }}"
          echo "Ancestor tag: ${{ steps.semver.outputs.ancestor_tag }}"
          echo "Is prerelease: ${{ steps.semver.outputs.is_prerelease }}"

      - name: Create version branch
        run: |
          git checkout -b version/${{ steps.semver.outputs.semver_tag }}
          git push origin version/${{ steps.semver.outputs.semver_tag }}

      - name: Update package.json version
        run: |
          git config --global user.email "adepanges@gmail.com"
          git config --global user.name "Ade Pangestu"
          npm version ${{ steps.semver.outputs.semver_tag }} --no-git-tag-version
          git add package.json
          git commit -m "chore: update version to ${{ steps.semver.outputs.semver_tag }}"

      - name: Install conventional-changelog
        run: npm install -g conventional-changelog-cli

      - name: Generate Version Changelog
        run: |
          mkdir -p changelog
          conventional-changelog -p angular -o changelog/v${{ steps.semver.outputs.semver_tag }}.md
          echo "- [v${{ steps.semver.outputs.semver_tag }}](./changelog/v${{ steps.semver.outputs.semver_tag }}.md)" >> CHANGELOG.md
          git add changelog/ CHANGELOG.md
          git commit -m "docs: add changelog for ${{ steps.semver.outputs.semver_tag }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: version/${{ steps.semver.outputs.semver_tag }}
          base: main
          title: "Version Update: ${{ steps.semver.outputs.semver_tag }}"
          body: |
            ### Version Update
            - New version: ${{ steps.semver.outputs.semver_tag }}
            - Changelog generated
            - Package.json updated
          draft: false
          delete-branch: true

      # - name: Cleanup old alpha tags (keep latest 10)
      #   if: ${{ steps.semver.outputs.is_prerelease == 'true' }}
      #   run: |
      #     git fetch --tags
          
      #     # Get all alpha tags sorted by creation date (newest first)
      #     TAGS=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags | grep -E '.*-alpha.*')
          
      #     # Count total alpha tags
      #     TOTAL_TAGS=$(echo "$TAGS" | wc -l)
          
      #     # If more than 10 tags, delete the oldest ones
      #     if [ $TOTAL_TAGS -gt 10 ]; then
      #       TAGS_TO_DELETE=$(echo "$TAGS" | tail -n +11)
      #       for tag in $TAGS_TO_DELETE; do
      #         git tag -d $tag
      #         git push origin --delete $tag
      #       done
      #     fi

  prerelease-version:
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: semver
        uses: gandarez/semver-action@v2.0.0
        with:
          branching_model: "git-flow"
          prerelease_id: "alpha"
          main_branch_name: "main"
          develop_branch_name: "develop"
          debug: true

      - name: Semantic Version Output
        run: |
          echo "Semver tag: ${{ steps.semver.outputs.semver_tag }}"
          echo "Previous tag: ${{ steps.semver.outputs.previous_tag }}"
          echo "Ancestor tag: ${{ steps.semver.outputs.ancestor_tag }}"
          echo "Is prerelease: ${{ steps.semver.outputs.is_prerelease }}"
      
      - name: Create version tag
        run: |
          git tag ${{ steps.semver.outputs.semver_tag }}
          git push origin ${{ steps.semver.outputs.semver_tag }}